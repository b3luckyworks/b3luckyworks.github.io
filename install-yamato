#!/usr/bin/env bash
set -euo pipefail

is_archiso() {
  [[ -d /run/archiso ]] || grep -q '^VARIANT_ID=archiso' /etc/os-release 2>/dev/null
}

if is_archiso; then
  echo "[yamato/bootstrap] Arch-ISO erkannt → starte den Arch-Installer (TUI)."
  timedatectl set-ntp true || true

  # archinstall sicherstellen
  if ! pacman -Qq archinstall >/dev/null 2>&1; then
    pacman -Sy --noconfirm archinstall
  fi

  # WICHTIG: Wenn das Script via 'curl | bash' läuft, stdin ist KEINE TTY → an /dev/tty binden
  if [[ ! -t 0 ]] && [[ -r /dev/tty ]]; then
    exec </dev/tty
  fi

  echo
  echo "Hinweis:"
  echo "  1) Partitioniere/konfiguriere jetzt alles im TUI (archinstall)."
  echo "  2) Reboote ins neue System."
  echo "  3) Führe DANN denselben Befehl erneut aus, um Yamato zu konfigurieren:"
  echo "     curl -fsSL https://b3luckyworks.github.io/install-yamato | bash"
  echo

  # TUI starten (jetzt mit echter TTY-Eingabe)
  archinstall

  # Nach Rückkehr aus dem TUI (falls kein Reboot erzwungen wurde):
  echo
  echo "[yamato/bootstrap] Archinstall beendet. Bitte ins neue System booten und dann:"
  echo "curl -fsSL https://b3luckyworks.github.io/install-yamato | bash"
  exit 0
else
  echo "[yamato/install] Normales System erkannt → Yamato installieren…"
  URL="https://raw.githubusercontent.com/b3luckyworks/yamato/HEAD/scripts/install.sh"
  TMP="/tmp/yamato-install.sh"
  curl -fsSL "$URL" -o "$TMP"
  chmod +x "$TMP"
  # Optional: Modus übergeben (client/server), Standard = client
  bash "$TMP" "$@"
fi
